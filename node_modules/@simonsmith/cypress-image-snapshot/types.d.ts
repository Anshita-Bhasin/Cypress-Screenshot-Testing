/// <reference types="cypress" />
/// <reference types="node" />
import type { MatchImageSnapshotOptions } from 'jest-image-snapshot';
declare global {
    namespace Cypress {
        interface Chainable {
            matchImageSnapshot(nameOrCommandOptions?: CypressImageSnapshotOptions | string): Chainable<DiffSnapshotResult>;
            matchImageSnapshot(name: string, commandOptions: CypressImageSnapshotOptions): Chainable<DiffSnapshotResult>;
        }
    }
}
type CypressScreenshotOptions = Partial<Cypress.ScreenshotOptions>;
export type SnapshotOptions = {
    screenshotsFolder: string;
    isUpdateSnapshots: boolean;
    isSnapshotDebug: boolean;
    specFileRelativeToRoot: string;
    currentTestTitle: string;
    e2eSpecDir: string;
    snapFilenameExtension: string;
    diffFilenameExtension: string;
} & CypressScreenshotOptions & MatchImageSnapshotOptions;
export type CypressImageSnapshotOptions = Partial<CypressScreenshotOptions & MatchImageSnapshotOptions> & {
    e2eSpecDir?: string;
    snapFilenameExtension?: string;
    diffFilenameExtension?: string;
};
export type Subject = void | Document | Window | Cypress.JQueryWithSelector<HTMLElement>;
export type DiffSnapshotResult = {
    added?: boolean;
    receivedSnapshotPath?: string;
    updated?: boolean;
    imgSrcString: string;
    imageDimensions: {
        baselineHeight: number;
        baselineWidth: number;
        receivedWidth: number;
        receivedHeight: number;
    };
    pass: boolean;
    diffSize: boolean;
    diffOutputPath: string;
    diffRatio: number;
    diffPixelCount: number;
};
export type DiffSnapshotOptions = {
    receivedImageBuffer: Buffer;
    snapshotIdentifier: string;
    snapshotsDir: string;
    storeReceivedOnFailure?: boolean;
    receivedDir?: string;
    diffDir?: string;
    updateSnapshot?: boolean;
    updatePassedSnapshot?: boolean;
    customDiffConfig?: Record<string, unknown>;
} & Pick<MatchImageSnapshotOptions, 'comparisonMethod' | 'blur' | 'allowSizeMismatch' | 'diffDirection' | 'onlyDiff' | 'failureThreshold' | 'failureThresholdType'>;
export {};
//# sourceMappingURL=types.d.ts.map